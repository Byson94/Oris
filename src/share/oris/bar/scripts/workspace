#!/bin/bash
set -euo pipefail

get_workspace_status() {
  local current_output=""
  declare -A ws_status

  while read -r line; do
    [[ "$line" =~ ^Output ]] && continue

    if [[ "$line" =~ \* ]]; then
      ws_id=$(echo "$line" | tr -d ' *')
      ws_status[$ws_id]="⬤"
    else
      ws_id=$(echo "$line" | tr -d ' ')
      ws_status[$ws_id]="◯"
    fi
  done < <(niri msg workspaces)

  json="{"
  first=true
  for ws in $(seq 1 10); do
    [[ "$first" = true ]] && first=false || json+=","
    json+="\"workspace_$ws\":\"${ws_status[$ws]:-⨂}\""
  done
  json+="}"
  echo "$json"
}

last_status=""
get_workspace_status

niri msg event-stream | while read -r line; do
  case "$line" in
  *"Workspace focused:"* | *"Workspaces changed:"*)
    current_status=$(get_workspace_status)
    if [ "$current_status" != "$last_status" ]; then
      echo "$current_status"
      last_status="$current_status"
    fi
    ;;
  esac
done
